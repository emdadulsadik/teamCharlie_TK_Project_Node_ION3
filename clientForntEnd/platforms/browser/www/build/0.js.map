{"version":3,"sources":["../../src/pages/user-management/user-management.module.ts","../../src/pages/user-management/user-management.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { UserManagementPage } from './user-management';\n\n@NgModule({\n  declarations: [\n    UserManagementPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(UserManagementPage),\n  ],\n})\nexport class UserManagementPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-management/user-management.module.ts","import { Component,OnInit } from '@angular/core';\nimport {  IonicPage,\n          NavController, \n          NavParams,\n          App,\n          AlertController,\n          LoadingController } from 'ionic-angular';\nimport { UsertabsPage } from '../usertabs/usertabs';\nimport { Storage } from '@ionic/storage';\nimport { TabsPage } from '../tabs/tabs';\nimport { UserSettingsProvider } from '../../providers/user-settings/user-settings';\nimport { User } from \"../../models/user.model\";\n@IonicPage()\n@Component({\n  selector: 'page-user-management',\n  templateUrl: 'user-management.html',\n})\nexport class UserManagementPage implements OnInit { \n  constructor(public navCtrl: NavController,\n              public navParams: NavParams, \n              public storage: Storage,\n              public appCtrl: App,\n              public alertCtrl: AlertController,\n              public loadingCtrl: LoadingController,\n              public userSetting: UserSettingsProvider) {\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UserManagementPage');\n    this.storage.get('token').then((val)=>{\n     console.log(val);\n    }).catch(\n      (err)=>{\n        console.log(err);\n      }\n    );\n  }\n  /**\n   * \n   * @description - Logout() method, It has two promise one is loading controller\n   *                and other is alert controller. After that It clean the token\n   *                from the local storage,\n   * @author- Khondakar Readul Isla\n   * @memberOf UserManagementPage\n   */\n  doLogout(){\n    const alert = this.alertCtrl.create({\n           title: 'Logout', \n           message: 'Do You Need fresh Air, We will always have been waiting for you',\n           buttons:[\n               {\n                 text:'No',\n                 role:'cancel',\n                 handler:()=>{\n                   console.log('cancel clicked'); \n                 }\n               },\n               {\n                 text:'Yes',\n                 handler:()=>{\n                     const loading = this.loadingCtrl.create({\n                       content:'Please come back again........'\n                     });\n                     loading.present().then(()=>{\n                      this.storage.clear().then(()=>{\n                        setTimeout(()=>{\n                          window.location.reload();\n                      }, 1000); \n                      this.appCtrl.getRootNav().setRoot(TabsPage)\n                     });\n                     })\n                     \n\n                   loading.onDidDismiss(() => {\n                     console.log('Dismissed loading');\n                   });\n                 }\n               }\n           ]\n    });\n    alert.present();\n   };\n\n  ngOnInit(){\n  \n  }\n/**\n * @description- Get the token value form sqlLite Storage\n * @author-Khondakar Readul Islam\n * @type {Promise<any>}\n * @memberOf UserManagementPage\n */\n  token:Promise<any> = this.storage.get('token').then((val)=>{\n    return this.token = val;\n  }).catch(\n    (err)=>{\n      console.log(err);\n    }\n  );\n\n/**\n * @description- Change the Footbar to default if token is null\n * @author-Khondakar Readul Islam\n * @memberOf UserManagementPage\n */\ngoToRootAgain(){\n    this.storage.get('token').then((val)=>{\n      if(val==null){\n        this.navCtrl.setRoot(TabsPage); \n      }else{\n        this.navCtrl.setRoot(UsertabsPage); \n      }\n    })\n  };\n\n  /**\n   * @description- Get the token value form sqlLite Storage\n   * @author-Khondakar Readul Islam\n   * @type {Promise<any>}\n   * @memberOf UserManagementPage     } [description]\n   */\n  userId:Promise<any> = this.storage.get('userId').then((val)=>{\n    return this.userId = val; \n  }).catch(\n    (err)=>{\n      console.log(err); \n    }\n  )\n\n/**\n * [onDeleted description]\n * @description- For the deleted user from NodeJs DataBase\n * @author- Khondakar Readul Islam \n * @memberOf UserManagementPage\n */\n  onDeleted(){\n     this.userSetting.deleted(this.userId).subscribe(\n        data=>{\n          const alert = this.alertCtrl.create({\n            title: 'Delete Account', \n            message: 'Is there anything wrong, you can contact with us before leave us',\n            buttons:[\n                {\n                  text:'Cancel',\n                  role:'cancel',\n                  handler:()=>{\n                    console.log('cancel clicked'); \n                  }\n                },\n                {\n                  text:'Delete',\n                  handler:()=>{\n                      const loading = this.loadingCtrl.create({\n                        content:'You can register anytime, whenever you want..'\n                      });\n                      loading.present().then(()=>{\n                       this.storage.clear().then(()=>{\n                         setTimeout(()=>{\n                           window.location.reload();\n                       }, 1000); \n                       this.appCtrl.getRootNav().setRoot(TabsPage)\n                      });\n                      })\n                      \n \n                    loading.onDidDismiss(() => {\n                      console.log('Dismissed loading');\n                    });\n                  }\n                }\n            ]\n     });\n     alert.present();\n        },\n        error=>{\n          const alert = this.alertCtrl.create({\n          title: 'sigin failed!',\n          message: error.message,\n          buttons: ['Ok']\n        });\n          alert.present();\n      }\n        \n     )\n  };\n\n\n\n/**\n * [onResetPassword description]\n * @author- Khondakar Readul Islam \n * @memberOf UserManagementPage\n */\nonResetPassword() {\n    let prompt = this.alertCtrl.create({\n      title: 'Reset Password',\n      message: \"Enter a new Password for your account, you're so keen on adding\",\n      inputs:   [\n                    {\n                      name: 'password',\n                      placeholder: 'Password'\n                    },\n                ],\n      buttons:  [\n                    {\n                      text: 'Cancel',\n                      handler: data => {\n                        console.log('Cancel clicked');\n                      }\n                    },\n                    {\n                      text: 'Save',\n                      handler: data => {\n\n                          const user = new User(\n                                  data.userName, \n                                  data.userRole,\n                                  data.emailAddress, \n                                  data.password, \n                                  data.firstName, \n                                  data.lastName\n                            ); \n\n                          const alert = this.alertCtrl.create({\n                            title: 'Reset Password', \n                            message: 'Are you Sure to change your Password',\n                            buttons:[\n                                    {\n                                        text:'Cancel',\n                                        role:'cancel',\n                                        handler:()=>{\n                                          console.log('cancel clicked'); \n                                        }\n                                    },\n                                    {\n                                        text:'Yes',\n                                        handler:()=>{\n                                                      const loading = this.loadingCtrl.create({\n                                                      content:'Thanks for your patient, Give us please a little moment...'\n                                                      });\n                                                      this.userSetting.resetPass(user,this.userId).subscribe(\n                                                          data=>{\n                                                                   loading.present().then(()=>{\n                                                                        this.storage.clear().then(()=>{\n                                                                             setTimeout(()=>{\n                                                                               window.location.reload();\n                                                                             }, 1000); \n                                                                             this.appCtrl.getRootNav().setRoot(TabsPage)\n                                                                        });\n                                                                    });\n                                                                    loading.onDidDismiss(() => {\n                                                                      console.log('Dismissed loading');\n                                                                    });\n                                                          },\n                                                          error=>{\n                                                                    const alert = this.alertCtrl.create({\n                                                                        title: 'sigin failed!',\n                                                                        message: error.message,\n                                                                        buttons: ['Ok']\n                                                                    });\n                                                                    alert.present();\n                                                          }\n                                                      )\n\n                                        }\n                                    }\n                            ]\n                          });\n                          alert.present();\n                      }\n                    }\n                ]\n    });\n    prompt.present();\n}\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-management/user-management.ts"],"sourceRoot":""}